# Choose how would you like your app to be run under Kubernetes management.
# Options are mutually exclusive: deployment, statefulSet, daemonSet.
# Hint:
#  For stateless apps - deployment (80% of times)
#  For drivers, daemons or anything that needs to be run on every node - daemonSet (0.1% of times)
deployment:
  enabled: true
  rollingUpdate:
    maxSurge: 50%
    maxUnavailable: 50%
    minReadySeconds: 2

imagePullSecrets: gitlab
daemonSet:
  enabled: false

# General settings
appName: ms-plugin
replicaCount: 1
terminationGracePeriodSeconds: 3

# Logging options.
logPattern: java
logArchive: false
logRotation: monthly
logSpace: temp

# Scheduling options. Affects on which Nodes your app will be deployed.
nodeSelector: {}
tolerations: []
affinity: {}

configMap: {}
#  name: asd
#  filesPath: "files/{*.ini,*.conf,*.txt}"
#  binaryFilesPath: "files/{*.jks,*.bin}"


## Configure app service
## ref: https://kubernetes.io/docs/tutorials/services/
service:
  type: ClusterIP
  protocol: TCP
  targetPort: web

## Configure ingress resourse
## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  host: api.siriuslab.kz
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "le-sirius"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, PATCH, DELETE"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, X-Process-Key, X-Session-Id, Set-Cookie, Authorization"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/use-proxy-protocol: "true"
  path: /
  ## all rewirites, redirects etc should be written in annotaions
  tlsSecret: api.siriuslab.kz
  extraPath: []

containerName: ms-plugin
image:
  repository: --
  tag: --
  pullPolicy: Always
command: []
args: []
env:
  PROFILES_ACTIVE: prod
  SERVER_PORT: "8080"
  DATASOURCE_URL: jdbc:postgresql://65.108.87.147:5432/ms-plugin-prod
  DATASOURCE_USERNAME: mcplugin-svc
  DATASOURCE_PASSWORD: Va1oThu6hubae6shuokee5guz
  FLYWAY_USER: postgres
  FLYWAY_PASSWORD: Feedoj6uquus2noo3thuip5Ahngu9t
configMapEnvFrom:
  name: ""
#  - secretRef:
#    name: "content-service"
volumeMounts: []
containerPorts:
  - name: web
    containerPort: 8080
    protocol: TCP
## Configure container resource limits
## ref:
resources: {}
#  requests:
#    cpu: 1000m
#    memory: 512Mi
#  limits:
#    cpu: 1000m
#    memory: 1024Mi

## Configure container liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
livenessProbe:
  enabled: false
  type: httpGet
  port: web
  path: /health
  httpHeaderName: #X-Custom-Header
  httpHeaderValue: #Awesome
  command: []
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3

readinessProbe:
  enabled: false
  type: httpGet
  port: web
  path: /health
  httpHeaderName: #X-Custom-Header
  httpHeaderValue: #Awesome
  command: []
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 3



## /etc/hosts file customisation
hostAliases: []
#  - ip: 192.168.253.195
#    hostnames:
#    - vkc-kraken-pre-kafka-1
#    

## DNS customisation
dnsConfig: {}
#  nameservers:
#    - 1.2.3.4
#  searches:
#    - ns1.svc.cluster-domain.example
#    - my.dns.search.suffix
#  options:
#    - name: ndots
#      value: "2"
#    - name: edns0

## This value will be overriden during CI/CD and set to the Developer's Email, who started the CI/CD Job
## Currently used to customise who will receive notifications about this release

## This value will be overriden during CI/CD ans set to CI_PROJECT_PATH_SLUG
ciProjectPathSlug:
